{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"$id": "http://github.com/jerrychenhf/cloudtik/python/cloudtick/core/database-schema.json",
	"title": "CloudTik",
	"description": "CloudTik database config schema",
	"type": "object",
    "required": [
        "workspace_name",
        "database_name",
        "provider"
    ],
    "additionalProperties": true,
	"properties": {
        "workspace_name": {
            "description": "A unique identifier for the workspace.",
            "type": "string"
        },
        "database_name": {
            "description": "A unique identifier for database instance.",
            "type": "string"
        },
        "from": {
            "description": "Inherit configurations from another configuration in templates folder.",
            "type": "string"
        },
        "provider": {
            "type": "object",
            "description": "Cloud-provider specific configuration.",
            "required": [ "type" ],
            "additionalProperties": true,
            "properties": {
                "type": {
                    "type": "string",
                    "description": "e.g. aws, azure, gcp, aliyun, huaweicloud..."
                },
                "region": { 
                    "type": "string",
                    "description": "e.g. us-east-1"
                },
                "provider_class": {
                    "type": "string",
                    "description": "The module and class path if using external workspace provider"
                },
                "use_internal_ips": {
                    "type": "boolean",
                    "description": "don't require public ips"
                },
                "namespace": {
                    "type": "string",
                    "description": "k8s namespace, if using k8s"
                },
                "location": {
                    "type": "string",
                    "description": "Azure location"
                },
                "resource_group": {
                    "type": "string",
                    "description": "Azure resource group"
                },
                "subscription_id": {
                    "type": "string",
                    "description": "Azure subscription id"
                },
                "availability_zone": {
                    "type": "string",
                    "description": "GCP availability zone"
                },
                "project_id": {
                    "type": ["string", "null"],
                    "description": "GCP globally unique project id"
                },
                "aws_credentials": {
                    "type": "object",
                    "description": "Credentials for authenticating with the AWS using boto3. If not specified, will use environment default.",
                    "additionalProperties": true,
                    "properties": {
                        "aws_access_key_id": {
                            "type": "string",
                            "description": "The access key to use when creating the client."
                        },
                        "aws_secret_access_key": {
                            "type": "string",
                            "description": "The secret key to use when creating the client."
                        },
                        "aws_session_token": {
                            "type": "string",
                            "description": "The session token to use when creating the client."
                        }
                    }
                },
                "gcp_credentials": {
                    "type": "object",
                    "description": "Credentials for authenticating with the GCP client. If not specified, will use environment default.",
                    "required": [ "type" ],
                    "additionalProperties": false,
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": ["oauth_token", "service_account"],
                            "description": "Credentials type: either temporary OAuth 2.0 token or permanent service account credentials blob."
                        },
                        "credentials": {
                            "type": "object",
                            "description": "OAuth token fields or service account credentials fields"
                        }
                    }
                },
                "azure_credentials": {
                    "type": "object",
                    "description": "Credentials for authenticating with the Azure Cloud. If not specified, will use environment default.",
                    "required": [ "type" ],
                    "additionalProperties": false,
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": ["ClientSecret", "ManagedIdentity"],
                            "description": "Credentials type for credentials information."
                        },
                        "credentials": {
                            "type": "object",
                            "additionalProperties": true,
                            "description": "Credential fields based on different credential types.",
                            "properties": {
                                "client_id": {
                                    "type": "string",
                                    "description": "The client id field for ClientSecret or ManagedIdentity credential."
                                },
                                "tenant_id": {
                                    "type": "string",
                                    "description": "The tenant id field for ClientSecret credential."
                                },
                                "client_secret": {
                                    "type": "string",
                                    "description": "The client secret field for ClientSecret credential."
                                }
                            }
                        }
                    }
                },
                "aliyun_credentials": {
                    "type": "object",
                    "description": "Credentials for authenticating with the Alibaba Cloud. If not specified, will use environment default.",
                    "required": [ "aliyun_access_key_id", "aliyun_access_key_secret" ],
                    "additionalProperties": false,
                    "properties": {
                        "aliyun_access_key_id": {
                            "type": "string",
                            "description": "The access key to use when creating the client."
                        },
                        "aliyun_access_key_secret": {
                            "type": "string",
                            "description": "The secret key to use when creating the client."
                        }
                    }
                },
                "huaweicloud_credentials": {
                    "type": "object",
                    "description": "Credentials for authenticating with HUAWEI CLOUD. If not specified, will use environment default.",
                    "required": [ "huaweicloud_access_key", "huaweicloud_secret_key" ],
                    "additionalProperties": false,
                    "properties": {
                        "huaweicloud_access_key": {
                            "type": "string",
                            "description": "The access key to use when creating the client."
                        },
                        "huaweicloud_secret_key": {
                            "type": "string",
                            "description": "The secret key to use when creating the client."
                        }
                    }
                },
                "database": {
                    "type": "object",
                    "description": "Managed cloud database options",
                    "additionalProperties": true,
                    "properties": {
                        "aws.database": {
                            "type": "object",
                            "description": "AWS RDS for MySQL options",
                            "additionalProperties": true,
                            "properties": {
                                "instance_type": {
                                    "type": "string",
                                    "description": "AWS RDS DBInstanceClass. default: db.t3.xlarge"
                                },
                                "storage_type": {
                                    "type": "string",
                                    "description": "AWS RDS StorageType. default: gp2"
                                },
                                "storage_size": {
                                    "type": "number",
                                    "description": "AWS RDS AllocatedStorage size in GB. default: 50"
                                },
                                "username": {
                                    "type": "string",
                                    "description": "AWS RDS MasterUserPassword. default: cloudtik"
                                },
                                "password": {
                                    "type": "string",
                                    "description": "AWS RDS MasterUserPassword."
                                },
                                "engine": {
                                    "type": "string",
                                    "description": "AWS RDS engine type: mysql or postgres. default: mysql"
                                },
                                "port": {
                                    "type": "number",
                                    "description": "AWS RDS port. default: mysql=3306, postgres=5432"
                                },
                                "high_availability": {
                                    "type": "boolean",
                                    "description": "AWS RDS high availability flag. Default: false"
                                }
                            }
                        },
                        "azure.database": {
                            "type": "object",
                            "description": "Azure Database for MySQL options",
                            "additionalProperties": true,
                            "properties": {
                                "instance_type": {
                                    "type": "string",
                                    "description": "Azure Database InstanceSku. default: Standard_D4ds_v4"
                                },
                                "storage_size": {
                                    "type": "number",
                                    "description": "Azure Database storage size in GB. default: 50"
                                },
                                "username": {
                                    "type": "string",
                                    "description": "Azure Database administrator login name. default: cloudtik"
                                },
                                "password": {
                                    "type": "string",
                                    "description": "Azure Database administrator password."
                                },
                                "engine": {
                                    "type": "string",
                                    "description": "Azure Database engine type: mysql or postgres. default: mysql"
                                },
                                "high_availability": {
                                    "type": "boolean",
                                    "description": "Azure Database high availability flag. Default: false"
                                }
                            }
                        },
                        "gcp.database": {
                            "type": "object",
                            "description": "GCP Cloud SQL for MySQL options",
                            "additionalProperties": true,
                            "properties": {
                                "instance_type": {
                                    "type": "string",
                                    "description": "GCP Cloud SQL machine type. default: db-custom-4-15360"
                                },
                                "storage_type": {
                                    "type": "string",
                                    "description": "GCP Cloud SQL storage type. default: PD_SSD"
                                },
                                "storage_size": {
                                    "type": "number",
                                    "description": "GCP Cloud SQL storage size in GB. default: 50"
                                },
                                "password": {
                                    "type": "string",
                                    "description": "GCP Cloud SQL root password."
                                },
                                "engine": {
                                    "type": "string",
                                    "description": "GCP Cloud SQL engine type: mysql or postgres. default: mysql"
                                },
                                "high_availability": {
                                    "type": "boolean",
                                    "description": "GCP Cloud SQL high availability flag. Default: false"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
